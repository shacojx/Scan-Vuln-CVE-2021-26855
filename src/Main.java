
import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Admin
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static ArrayList<String> list_vuln = new ArrayList<>();

    public static void main(String[] args) throws IOException {
        // TODO code application logic here
        Scanner scan = new Scanner(System.in);
        ArrayList<String> list_ip_24 = new ArrayList<>();
        String path = Findpatch();
        
        System.out.println(path);
        System.out.println("============================");
        System.out.println("= Scan vuln CVE-2021-26855 =");
        System.out.println("=          EOG             =");
        System.out.println("============================");
        System.out.print("Enter list ip: ");
        String list_ip = scan.nextLine();
        File file = new File(list_ip);
        Scanner sc = new Scanner(file);
        while (sc.hasNextLine()) {
            list_ip_24.add(sc.nextLine());
        }
        for (String x : list_ip_24) {
            String ip_arr[] = x.split("\\.");
            String ipx = ip_arr[0] + "." + ip_arr[1] + "." + ip_arr[2] + ".";
            for (int i = 1; i <= 255; i++) {
                String ip_full = ipx + i;
                if (ScanVuln(ip_full, path).equalsIgnoreCase("ok")) {
                    FileWriter myWriter = new FileWriter("ipVuln.txt");
                    myWriter.write(ip_full + "\n");
                    myWriter.close();
                }
            }
        }
        
        System.out.println("Save File Done !");
        System.out.println("File: " + path + "ipVuln.txt");

    }

    public static String Findpatch() throws IOException {
        Process processx = Runtime.getRuntime().exec("cmd.exe /c echo %cd%");
        BufferedReader readerx = new BufferedReader(new InputStreamReader(processx.getInputStream()));
        String linex = readerx.readLine();
        return linex;
    }

    public static String ScanVuln(String ip, String path) throws IOException {
        Process process = Runtime.getRuntime().exec("cmd.exe /c " + path + "/Nmap/nmap.exe --script http-vuln-cve2021-26855 -p443 " + ip);
        BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
        String line = "";
        String output = "";
        while ((line = reader.readLine()) != null) {
            output = output + line + "\n";
        }
        if (output.contains("State: VULNERABLE")) {
            System.out.println("[+] " + ip + " : is CVE-2021-26855 VULNERABLE");
            list_vuln.add(ip);
            return "OK";
        } else {
            System.out.println("[+] " + ip + " : is not CVE-2021-26855 VULNERABLE");
            return "NOT";
        }
    }

}
